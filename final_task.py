from __future__ import annotations  # –¥–ª—è –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º –∫–ª–∞—Å—Å–æ–º
from pprint import pprint  # –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
import click  # –¥–ª—è CLI
import random  # –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π


class Pizza:
    '''
    –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≤—Å–µ—Ö –≤–∏–¥–æ–≤ –ø–∏—Ü—Ü.

    –ê—Ç—Ä–∏–±—É—Ç—ã –∫–ª–∞—Å—Å–∞
    =======
    l_size : int
        —Ä–∞–∑–º–µ—Ä L
    xl_size : int
        —Ä–∞–∑–º–µ—Ä XL

    –ê—Ç—Ä–∏–±—É—Ç—ã —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
    =======
    recipe : dict
        —Ä–µ—Ü–µ–ø—Ç –ø–∏—Ü—Ü—ã

    –ú–µ—Ç–æ–¥—ã –∫–ª–∞—Å—Å–∞
    =======
    avalible_size():
        –ü–µ—á–∞—Ç–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –ø–∏—Ü—Ü—ã –¥–ª—è –∑–∞–∫–∞–∑–∞.

    –ú–µ—Ç–æ–¥—ã —ç–∫–∑–µ–º–ø–ª—è—Ä–∞
    =======
    avalible_dict():
        –ü–µ—á–∞—Ç–∞–µ—Ç —Ä–µ—Ü–µ–ø—Ç –ø–∏—Ü—Ü—ã.
    '''

    # –î–æ—Å—Ç—É–ø–Ω—ã–π —Ä–∞–∑–º–µ—Ä –õ–Æ–ë–û–ô –ø–∏—Ü—Ü—ã –≤ —Å–º
    # –ø–æ—ç—Ç–æ–º—É –∏ –≤—ã–Ω–µ—Å –≤ –∞—Ç—Ä–∏–±—É—Ç—ã –∫–ª–∞—Å—Å–∞
    l_size = 30
    xl_size = 40

    def __init__(self):
        '''–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä'''
        self.recipe = {}

    def __eq__(self, other: Pizza) -> None:  # —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–∏—Ü—Ü
        '''–ú–∞–≥–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –ø–∏—Ü—Ü'''
        if not isinstance(other, Pizza):
            print('–í—ã –ø—ã—Ç–∞–π—Ç–µ—Å—å —Å—Ä–∞–≤–Ω–∏—Ç—å –ø–∏—Ü—Ü—É –Ω–µ —Å –ø–∏—Ü—Ü–æ–π!')
            return
        if self.__class__.__name__ == other.__class__.__name__:
            print('–≠—Ç–æ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –≤–∏–¥ –ø–∏—Ü—Ü—ã :)')
            return

        my_len = len(self.recipe)  # –¥–ª–∏–Ω–∞ —Ä–µ—Ü–µ–ø—Ç–∞ –ª–µ–≤–æ–π –ø–∏—Ü—Ü—ã
        other_len = len(other.recipe)  # –¥–ª–∏–Ω–∞ —Ä–µ—Ü–µ–ø—Ç–∞ –ø—Ä–∞–≤–æ–π –ø–∏—Ü—Ü—ã
        if my_len > other_len:
            print('–í –ª–µ–≤–æ–π –ø–∏—Ü—Ü–µ –±–æ–ª—å—à–µ –∏–Ω–≥—Ä–∏–¥–∏–µ–Ω—Ç–æ–≤')
        elif my_len < other_len:
            print('–í –ª–µ–≤–æ–π –ø–∏—Ü—Ü–µ –º–µ–Ω—å—à–µ –∏–Ω–≥—Ä–∏–¥–∏–µ–Ω—Ç–æ–≤')
        else:
            print('–í –ø–∏—Ü—Ü–∞—Ö –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ –∫–æ–ª-–≤–æ –∏–Ω–≥—Ä–∏–¥–∏–µ–Ω—Ç–æ–≤')

    @classmethod
    def avalible_size(cls: Pizza | Margherita | Pepperoni | Hawaiian) -> None:
        '''–í—ã–≤–æ–¥–∏—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –¥–ª—è –ª—é–±–æ–π –ø–∏—Ü—Ü—ã'''

        print('–£ –í–∞—Å –µ—Å—Ç—å –¥–≤–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞ —Ä–∞–∑–º–µ—Ä–∞ –ø–∏—Ü—Ü—ã:')
        print(f'—Ä–∞–∑–º–µ—Ä L -> {cls.l_size} —Å–º')
        print(f'—Ä–∞–∑–º–µ—Ä XL -> {cls.l_size} —Å–º')

    def dict(self) -> None:
        '''–í—ã–≤–æ–¥–∏—Ç —Ä–µ—Ü–µ–ø—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø–∏—Ü—Ü—ã'''

        print(f'–†–µ—Ü–µ–ø—Ç –ø–∏—Ü—Ü—ã {self.__class__.__name__}:')
        # —Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –∞—Ç—Ä–∏–±—É—Ç–µ-—Ä–µ—Ü–µ–ø—Ç–µ –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞ –ø–∏—Ü—Ü—ã
        pprint(self.__getattribute__('recipe'))


class Margherita(Pizza):
    '''
    –ö–ª–∞—Å—Å –ø–∏—Ü—Ü—ã –ú–∞—Ä–≥–∞—Ä–∏—Ç—ã.
    –°–æ–¥–µ—Ä–∂–∏—Ç –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç -> —Ä–µ—Ü–µ–ø—Ç.
    '''

    def __init__(self):
        # –º–æ–∂–Ω–æ –∏ –±–µ–∑ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏, –¥–æ–±–∞–≤–∏–ª, —á—Ç–æ–±—ã –ª–∏–Ω—Ç–µ—Ä –Ω–µ —Ä—É–≥–∞–ª—Å—è ;)
        super().__init__()
        self.recipe = {'–ü—à–µ–Ω–∏—á–Ω–∞—è –º—É–∫–∞': '1.5 —Å—Ç–æ–ª. –ª–æ–∂–∫–∏',
                       '–°—É—Ö–∏–µ –¥—Ä–æ–∂–∂–∏': '1 —á–∞–π. –ª–æ–∂–∫–∞',
                       '–û–ª–∏–≤–∫–æ–≤–æ–µ –º–∞—Å–ª–æ': '2 —Å—Ç–∞–∫.',
                       '–¢–æ–º–∞—Ç–Ω–∞—è –ø–∞—Å—Ç–∞': '3 —Å—Ç–æ–ª. –ª–æ–∂–∫–∏',
                       '–ú–æ—Ü–∞—Ä–µ–ª–ª–∞': '200 –≥—Ä.',
                       '–ü–æ–º–∏–¥–æ—Ä—ã —á–µ—Ä—Ä–∏': '8 —à—Ç.',
                       '–ß–µ—Å–Ω–æ–∫': '1 –∑—É–±—á.'}


class Pepperoni(Pizza):
    '''
    –ö–ª–∞—Å—Å –ø–∏—Ü—Ü—ã –ü–µ–ø–ø–µ—Ä–æ–Ω–∏.
    –°–æ–¥–µ—Ä–∂–∏—Ç –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç -> —Ä–µ—Ü–µ–ø—Ç.
    '''

    def __init__(self):
        super().__init__()
        self.recipe = {'–ü—à–µ–Ω–∏—á–Ω–∞—è –º—É–∫–∞': '1.5 —Å—Ç–æ–ª. –ª–æ–∂–∫–∏',
                       '–°—É—Ö–∏–µ –¥—Ä–æ–∂–∂–∏': '1 —á–∞–π. –ª–æ–∂–∫–∞',
                       '–û–ª–∏–≤–∫–æ–≤–æ–µ –º–∞—Å–ª–æ': '3 —Å—Ç–∞–∫.',
                       '–¢–æ–º–∞—Ç–Ω–∞—è –ø–∞—Å—Ç–∞': '5 —Å—Ç–æ–ª. –ª–æ–∂–µ–∫',
                       '–°–º–µ—Å—å —Å–µ–∫—Ä–µ—Ç–Ω—ã—Ö —Ç—Ä–∞–≤': '100 –≥—Ä.',
                       '–°—ã—Ä–æ–∫–æ–ø—á–µ–Ω–∞—è –∫–æ–ª–±–∞—Å–∞': '150 –≥—Ä.',
                       '–ü–∞–ø—Ä–∏–∫–∞': '1 —â–µ–ø–æ—Ç–∫–∞',
                       '–ú–æ—Ü–∞—Ä–µ–ª–ª–∞': '200 –≥—Ä.',
                       '–ü–æ–º–∏–¥–æ—Ä—ã —á–µ—Ä—Ä–∏': '6 —à—Ç.'}


class Hawaiian(Pizza):
    '''
    –ö–ª–∞—Å—Å –ì–∞–≤–∞–π—Å–∫–æ–π –ø–∏—Ü—Ü—ã.
    –°–æ–¥–µ—Ä–∂–∏—Ç –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –∞—Ç—Ä–∏–±—É—Ç -> —Ä–µ—Ü–µ–ø—Ç.
    '''

    def __init__(self):
        super().__init__()  # —Ä–µ—Ü–µ–ø—Ç —Å —Å–∞–º–æ–≥–æ –∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ —Å–∞–π—Ç–∞ –æ –ø–∏—Ü—Ü–∞—Ö
        self.recipe = {'–ú—É–∫–∞ –ø—à–µ–Ω–∏—á–Ω–∞—è': '450 –ì—Ä–∞–º–º',
                       '–í–æ–¥–∞': '180 –ì—Ä–∞–º–º',
                       '–ú–∞—Å–ª–æ —Ä–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ–µ': '1.5 –°—Ç. –ª–æ–∂–∫–∏',
                       '–°–∞—Ö–∞—Ä': '0.5 –ß–∞–π–Ω—ã—Ö –ª–æ–∂–∫–∏',
                       '–°–æ–ª—å': '0.5 –ß–∞–π–Ω—ã—Ö –ª–æ–∂–∫–∏',
                       '–î—Ä–æ–∂–∂–∏': '5 –ì—Ä–∞–º–º',
                       '–ö—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ': '180 –ì—Ä–∞–º–º',
                       '–°—ã—Ä': '50 –ì—Ä–∞–º–º',
                       '–ê–Ω–∞–Ω–∞—Å—ã': '150 –ì—Ä–∞–º–º',
                       '–ö–µ—Ç—á—É–ø': '2 –°—Ç. –ª–æ–∂–∫–∏',
                       '–ú–∞–π–æ–Ω–µ–∑': '1 –°—Ç. –ª–æ–∂–∫–∞'}


def log(func):
    '''
    –î–µ–∫–æ—Ä–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    –≤ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫ –≤—ã–≤–æ–¥—É —Ñ—É–Ω–∫—Ü–∏–∏
    '''

    def wrapper(pizza):
        original_result = func(pizza)  # —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ñ-—Ü–∏–∏ –¥–æ –¥–µ–∫–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è
        return f'{original_result} - {random.randint(1, 10)}—Å!'
    return wrapper


@log
def bake(pizza):
    return 'bake'  # –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º


@click.group()  # –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –≤—Å–µ—Ö –¥–µ–∫–æ—Ä–∏—Ä—É–µ–º—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
def cli():
    pass


@cli.command()
@click.option('--delivery', default=False, is_flag=True)
@click.argument('pizza', nargs=1)
def order(pizza: str, delivery: bool):
    '''–ì–æ—Ç–æ–≤–∏—Ç –∏ –¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–∏—Ü—Ü—É'''

    if pizza.strip().lower() not in ('pepperoni', 'hawaiian', 'margherita'):
        print('–£ –Ω–∞—Å –Ω–µ—Ç —Ç–∞–∫–æ–π –ø–∏—Ü—Ü—ã, –ø–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ –ø–æ–∑–∂–µ.')
    else:
        print(f'üë®‚Äçüç≥ –ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –∑–∞ {random.randint(1, 10)}—Å!')
        if delivery:
            print(f'üõµ –î–æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞ {random.randint(1, 10)}—Å!')


@cli.command()
def menu():
    '''–í—ã–≤–æ–¥–∏—Ç –º–µ–Ω—é'''

    for classs in (Margherita, Pepperoni, Hawaiian):
        emoji = random.choice(['üçï', 'üßÄ'])  # –ø—É—Å—Ç—å —ç–º–æ–∂–∏ –≥–µ–Ω–µ—Ä–∏—Ç—Å—è —Å–ª—É—á–∞–π–Ω–æ ;)
        print(f'- {classs.__name__} {emoji}:')
        classs().dict()
        print('=' * 30)  # —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –≤—ã–≤–æ–¥–∞


@cli.command()
def test():  # unit-—Ç–µ—Å—Ç—ã
    '''–í—ã–≤–æ–¥–∏—Ç —Ç–µ—Å—Ç—ã'''

    # –≤—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –¥–µ–∫–æ—Ä–∏—Ä—É–µ–º–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
    print(bake(Margherita()))

    # —Å–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –∫–ª–∞—Å—Å–æ–≤
    margo = Margherita()
    peperoni = Pepperoni()
    hawaii = Hawaiian()

    # –≤—ã–≤–æ–¥–∏—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –ø–∏—Ü—Ü—ã
    margo.avalible_size()
    print('=' * 30)

    # –ø–æ—Å–º–æ—Ç—Ä–∏–º —Ä–µ—Ü–µ–ø—Ç –∫–∞–∂–¥–æ–≥–æ –≤–∏–¥–∞ –ø–∏—Ü—Ü—ã
    for instance in [margo, peperoni, hawaii]:
        instance.dict()
        print('=' * 30)

    # —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–≤—É—Ö —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≤–∏–¥–æ–≤ –ø–∏—Ü—Ü
    margo == peperoni

    # —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–≤—É—Ö –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –≤–∏–¥–æ–≤ –ø–∏—Ü—Ü
    margo == margo
    # —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–∏—Ü—Ü—ã —Å –¥—Ä—É–≥–∏–º —Ç–∏–ø–æ–º –¥–∞–Ω–Ω—ã—Ö
    margo == 123


if __name__ == '__main__':
    cli()
